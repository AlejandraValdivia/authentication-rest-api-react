[{"C:\\Users\\alexx\\Desktop\\SKILLCRUSH\\REACT\\01-authentication-rest-api-react\\src\\index.js":"1","C:\\Users\\alexx\\Desktop\\SKILLCRUSH\\REACT\\01-authentication-rest-api-react\\src\\App.js":"2","C:\\Users\\alexx\\Desktop\\SKILLCRUSH\\REACT\\01-authentication-rest-api-react\\src\\pages\\HomePage.js":"3","C:\\Users\\alexx\\Desktop\\SKILLCRUSH\\REACT\\01-authentication-rest-api-react\\src\\components\\Layout\\Layout.js":"4","C:\\Users\\alexx\\Desktop\\SKILLCRUSH\\REACT\\01-authentication-rest-api-react\\src\\pages\\AuthPage.js":"5","C:\\Users\\alexx\\Desktop\\SKILLCRUSH\\REACT\\01-authentication-rest-api-react\\src\\components\\Profile\\UserProfile.js":"6","C:\\Users\\alexx\\Desktop\\SKILLCRUSH\\REACT\\01-authentication-rest-api-react\\src\\components\\Profile\\ProfileForm.js":"7","C:\\Users\\alexx\\Desktop\\SKILLCRUSH\\REACT\\01-authentication-rest-api-react\\src\\components\\StartingPage\\StartingPageContent.js":"8","C:\\Users\\alexx\\Desktop\\SKILLCRUSH\\REACT\\01-authentication-rest-api-react\\src\\components\\Auth\\AuthForm.js":"9","C:\\Users\\alexx\\Desktop\\SKILLCRUSH\\REACT\\01-authentication-rest-api-react\\src\\components\\Layout\\MainNavigation.js":"10","C:\\Users\\alexx\\Desktop\\SKILLCRUSH\\REACT\\01-authentication-rest-api-react\\src\\store\\auth-context.js":"11"},{"size":352,"mtime":1629172033706,"results":"12","hashOfConfig":"13"},{"size":915,"mtime":1629316999404,"results":"14","hashOfConfig":"13"},{"size":171,"mtime":1629161862755,"results":"15","hashOfConfig":"13"},{"size":246,"mtime":1629161862417,"results":"16","hashOfConfig":"13"},{"size":130,"mtime":1629161862796,"results":"17","hashOfConfig":"13"},{"size":278,"mtime":1629161862619,"results":"18","hashOfConfig":"13"},{"size":1345,"mtime":1629311334629,"results":"19","hashOfConfig":"13"},{"size":240,"mtime":1629161862522,"results":"20","hashOfConfig":"13"},{"size":2931,"mtime":1629319098616,"results":"21","hashOfConfig":"13"},{"size":1015,"mtime":1629316087487,"results":"22","hashOfConfig":"13"},{"size":2258,"mtime":1629322274028,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"zmhjen",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\alexx\\Desktop\\SKILLCRUSH\\REACT\\01-authentication-rest-api-react\\src\\index.js",[],["48","49"],"C:\\Users\\alexx\\Desktop\\SKILLCRUSH\\REACT\\01-authentication-rest-api-react\\src\\App.js",[],"C:\\Users\\alexx\\Desktop\\SKILLCRUSH\\REACT\\01-authentication-rest-api-react\\src\\pages\\HomePage.js",[],"C:\\Users\\alexx\\Desktop\\SKILLCRUSH\\REACT\\01-authentication-rest-api-react\\src\\components\\Layout\\Layout.js",[],"C:\\Users\\alexx\\Desktop\\SKILLCRUSH\\REACT\\01-authentication-rest-api-react\\src\\pages\\AuthPage.js",[],"C:\\Users\\alexx\\Desktop\\SKILLCRUSH\\REACT\\01-authentication-rest-api-react\\src\\components\\Profile\\UserProfile.js",[],"C:\\Users\\alexx\\Desktop\\SKILLCRUSH\\REACT\\01-authentication-rest-api-react\\src\\components\\Profile\\ProfileForm.js",[],"C:\\Users\\alexx\\Desktop\\SKILLCRUSH\\REACT\\01-authentication-rest-api-react\\src\\components\\StartingPage\\StartingPageContent.js",[],"C:\\Users\\alexx\\Desktop\\SKILLCRUSH\\REACT\\01-authentication-rest-api-react\\src\\components\\Auth\\AuthForm.js",["50"],"import { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthContext from '../../store/auth-context';\n\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const authCtx = useContext(AuthContext);\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // optional: Add validation\n    let url;\n    if(isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAKq2n14bXTRSPqEr9_WB1ykkjQAdCRL9s'\n    } else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAKq2n14bXTRSPqEr9_WB1ykkjQAdCRL9s'\n  }\n  fetch(url, {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true,\n        }),\n        headers: { 'Content-Type': 'application/json'},\n      },\n    ).then((res) => {\n      setIsLoading(false);\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then((data) => {\n          let errorMessage = 'Authentication failed!';\n          // if (data && data.error && data.error.message) {\n          //   errorMessage = data.error.message;\n          // }\n          \n          throw new Error(errorMessage);\n        });\n      }\n    })\n    .then(data => {\n      const expirationTime = new Date(new Date().getTime() + (+data.expiresIn * 1000));\n      authCtx.login(data.idToken, expirationTime.toISOString());\n      history.replace('/');\n    })\n    .catch(err => {\n      alert(err.message);\n    });\n};\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef}/>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' required ref={passwordInputRef}/>\n        </div>\n        <div className={classes.actions}>\n          <button>{isLogin ? 'Login' : 'Create Account'}</button>\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","C:\\Users\\alexx\\Desktop\\SKILLCRUSH\\REACT\\01-authentication-rest-api-react\\src\\components\\Layout\\MainNavigation.js",[],"C:\\Users\\alexx\\Desktop\\SKILLCRUSH\\REACT\\01-authentication-rest-api-react\\src\\store\\auth-context.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":15,"column":10,"nodeType":"57","messageId":"58","endLine":15,"endColumn":19},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]